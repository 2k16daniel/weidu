DEFINE_PATCH_FUNCTION ADD_CRE_SCRIPT
  INT_VAR
    offset_start = SCRIPT_OVERRIDE
    offset_end = SCRIPT_DEFAULT
  STR_VAR
    script = ""
  RET
    success
BEGIN
  PATCH_IF "%script%" STR_CMP "" BEGIN
    READ_ASCII 0 sig (3)
    PATCH_IF "%sig%" STR_CMP "CRE" BEGIN
      PATCH_FAIL "ERROR: ADD_CRE_SCRIPT called on invalid creature file"
    END
    PATCH_FOR_EACH var IN offset_start offset_end BEGIN
      PATCH_IF EVAL "%%var%%" < 0 BEGIN
        PATCH_FAIL "ERROR: ADD_CRE_SCRIPT: invalid argument: %var%"
      END
    END
    PATCH_IF offset_end < offset_start BEGIN
      PATCH_FAIL "ERROR: ADD_CRE_SCRIPT: offset_end cannot be less than offset_start"
    END
    PATCH_IF offset_end > BUFFER_LENGTH BEGIN
      PATCH_FAIL "ERROR: ADD_CRE_SCRIPT: offset_end cannot be greater than the size of the file"
    END
    script_length = 0x8
    done = 0
    success = 0
    FOR (script_offset = offset_start; script_offset <= offset_end && !done; script_offset += script_length) BEGIN
      READ_ASCII script_offset escript
      PATCH_IF "%escript%" STRING_EQUAL "" OR "%escript%" STRING_EQUAL_CASE "none" BEGIN
        WRITE_ASCIIE script_offset "%script%"
        done = 1
        success = 1
      END
    END
    PATCH_IF !done BEGIN
      PATCH_PRINT "WARNING: ADD_CRE_SCRIPT was unable to assign script %script%"
    END
  END
END


DEFINE_ACTION_FUNCTION SUBSTRING
  INT_VAR
    start = 0
    length = 0
  STR_VAR
    string = ""
  RET
    substring
BEGIN
  ACTION_FOR_EACH var IN start length BEGIN
    ACTION_IF EVAL "%%var%%" < 0 BEGIN
      FAIL "ERROR: SUBSTRING: invalid argument: %var%"
    END
  END
  ACTION_IF length > STRING_LENGTH "%string%" BEGIN
    FAIL "ERROR: SUBSTRING: the substring cannot be longer than the string"
  END
  ACTION_IF start > STRING_LENGTH "%string%" BEGIN
    FAIL "ERROR: SUBSTRING: the substring cannot be taken at an offset greater than the string length"
  END
  ACTION_IF start + length > STRING_LENGTH "%string%" BEGIN
    FAIL "ERROR: SUBSTRING: attempt to take substring out of bounds"
  END
  OUTER_PATCH "%string%" BEGIN
    READ_ASCII start substring (length)
  END
END


DEFINE_PATCH_FUNCTION SUBSTRING
  INT_VAR
    start = 0
    length = 0
  STR_VAR
    string = ""
  RET
    substring
BEGIN
  INNER_ACTION BEGIN
    LAF SUBSTRING INT_VAR start length STR_VAR string RET substring END
  END
END

DEFINE_ACTION_FUNCTION HANDLE_AUDIO
  INT_VAR
    music = 0
  STR_VAR
    audio_path = EVAL "%MOD_FOLDER%/audio"
    oggdec_path = EVAL "%audio_path%"
    sox_path = EVAL "%audio_path%"
BEGIN
  ACTION_IF !GAME_IS bgee BEGIN
    ACTION_MATCH "%WEIDU_OS%" WITH
      win32
      BEGIN
        ACTION_IF FILE_EXISTS "%oggdec_path%/oggdec.exe" BEGIN
          ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
            AT_NOW ~%oggdec_path%/oggdec.exe %BASH_FOR_FILESPEC%~
            MOVE ~%audio_path%/%BASH_FOR_RES%.wav~ override
          END
        END ELSE BEGIN
          WARN ~WARNING: audio was not installed because oggdec.exe could not be found in %oggdec_path%~
        END
      END

      osx
      BEGIN
        ACTION_IF FILE_EXISTS ~%sox_path%/sox~ BEGIN
          AT_NOW ~chmod +x %sox_path%/sox~
          ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
            AT_NOW ~%sox_path%/sox %BASH_FOR_FILESPEC% %audio_path%/%BASH_FOR_RES%.wav~
            MOVE ~%audio_path%/%BASH_FOR_RES%.wav~ override
          END
        END ELSE BEGIN
          WARN ~WARNING: audio was not installed because sox could not be found in %sox_path%~
        END
      END

      unix
      BEGIN
        OUTER_SET installed = 1
        ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
          AT_NOW ~oggdec %BASH_FOR_FILESPEC%~
          ACTION_IF FILE_EXISTS ~%audio_path%/%BASH_FOR_RES%.wav~ BEGIN
            MOVE ~%audio_path%/%BASH_FOR_RES%.wav~ override
          END ELSE OUTER_SET installed = 0
        END
        ACTION_IF !installed BEGIN
          WARN "WARNING: audio was not installed because WAV files were not found. Are you sure you have oggdec installed?"
        END
      END
      DEFAULT
    END
  END ELSE BEGIN
    ACTION_IF !music BEGIN
      OUTER_SPRINT ext "wav"
    END ELSE BEGIN
      OUTER_SPRINT ext "acm"
    END
    ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
      COPY_LARGE ~%BASH_FOR_FILESPEC%~ ~override/%BASH_FOR_RES%.%ext%~
    END
  END
END

DEFINE_ACTION_FUNCTION HANDLE_TILESETS
  STR_VAR
    tiz_path = EVAL "%MOD_FOLDER%/tiz"
    tisunpack_path = EVAL "%tiz_path%"
BEGIN
  ACTION_MATCH "%WEIDU_OS%" WITH
    win32
    BEGIN
      OUTER_SPRINT tisunpack "tisunpack.exe"
    END

    osx unix
    BEGIN
      OUTER_SPRINT tisunpack "tisunpack"
      ACTION_IF FILE_EXISTS ~%tisunpack_path%/%WEIDU_OS%/%tisunpack%~ BEGIN
        AT_NOW ~chmod +x %tisunpack_path%/%WEIDU_OS%/%tisunpack%~
      END
    END
    DEFAULT
  END
  ACTION_IF FILE_EXISTS ~%tisunpack_path%/%WEIDU_OS%/%tisunpack%~ BEGIN
    ACTION_BASH_FOR ~%tiz_path%~ ~.+\.tiz$~ BEGIN
      ACTION_IF !FILE_EXISTS ~%tiz_path%/%BASH_FOR_RES%.tis~ BEGIN
        AT_NOW ~%tisunpack_path%/%WEIDU_OS%/%tisunpack% -s -f -o %tiz_path%/%BASH_FOR_RES%.tis %BASH_FOR_FILESPEC%~
      END
      MOVE ~%tiz_path%/%BASH_FOR_RES%.tis~ override
    END
  END ELSE ACTION_IF "%WEIDU_OS%" STRING_EQUAL_CASE "unix" BEGIN // Support tisunpack being located on the system path
    OUTER_SET installed = 1
    ACTION_BASH_FOR ~%tiz_path%~ ~.+\.tiz$~ BEGIN
      ACTION_IF !FILE_EXISTS ~%tiz_path%/%BASH_FOR_RES%.tis~ BEGIN
        AT_NOW ~tisunpack -s -f -o %tiz_path%/%BASH_FOR_RES%.tis %BASH_FOR_FILESPEC%~
      END
      ACTION_IF FILE_EXISTS ~%tiz_path%/%BASH_FOR_RES%.tis~ BEGIN
        MOVE ~%tiz_path%/%BASH_FOR_RES%.tis~ override
      END ELSE OUTER_SET installed = 0
    END
    ACTION_IF !installed BEGIN
      WARN ~WARNING: tilesets were not installed because TIS files were not found. Are you sure you have tisunpack installed?~
    END
  END ELSE BEGIN
    WARN ~WARNING: tilesets were not installed because %tisunpack% was not found in %tisunpack_path%/%WEIDU_OS%~
  END
END

DEFINE_PATCH_FUNCTION DELETE_WORLDMAP_LINKS
  STR_VAR
    from_area = ""
    to_area = ""
BEGIN
  READ_LONG 0x34 ao
  READ_LONG 0x38 lo
  links = 0
  FOR (i = 0; i < LONG_AT 0x30; ++i) BEGIN
    lao = ao + 0xf0 * i
    READ_ASCII lao source_name
    PATCH_FOR_EACH node IN 0 3 2 1 BEGIN
      io = lao + 0x50 + 0x8 * node
      no = lao + 0x54 + 0x8 * node
      WRITE_LONG io links
      READ_LONG no number
      PATCH_IF "%source_name%" STRING_EQUAL_CASE "%from_area%" BEGIN
        FOR (j = 0; j < number; ++j) BEGIN
          llo = lo + 0xd8 * (links + j)
          READ_ASCII ao + 0xf0 * (LONG_AT llo) target_name
          PATCH_IF "%target_name%" STRING_EQUAL_CASE "%to_area%" BEGIN
            DELETE_BYTES llo 0xd8
            --number
          END
        END
      END
      WRITE_LONG no number
      links += number
    END
  END
  WRITE_LONG 0x3c links
END

DEFINE_PATCH_FUNCTION fl#ADD_WORLDMAP_LINKS#PATCH_LINK
  INT_VAR
    link_offset = 0
    target_index = 0
    distance_scale = 0
    default_entry = 1
    encounter_probability = 0
  STR_VAR
    entry = ""
    random_area1 = ""
    random_area2 = ""
    random_area3 = ""
    random_area4 = ""
    random_area5 = ""
BEGIN
  PATCH_IF link_offset > 0 BEGIN
    WRITE_LONG   link_offset target_index
    WRITE_ASCIIE link_offset + 0x4  "%entry%" #32
    WRITE_LONG   link_offset + 0x24 distance_scale
    WRITE_LONG   link_offset + 0x28 default_entry
    WRITE_ASCIIE link_offset + 0x2c "%random_area1%" #8
    WRITE_ASCIIE link_offset + 0x34 "%random_area2%" #8
    WRITE_ASCIIE link_offset + 0x3c "%random_area3%" #8
    WRITE_ASCIIE link_offset + 0x44 "%random_area4%" #8
    WRITE_ASCIIE link_offset + 0x4c "%random_area5%" #8
    WRITE_LONG   link_offset + 0x54 encounter_probability
  END
END

DEFINE_PATCH_FUNCTION ADD_WORLDMAP_LINKS
  INT_VAR
    distance_scale = 0
    default_entry = 1
    encounter_probability = 0
  STR_VAR
    from_area = ""
    from_node = ""
    to_area = ""
    entry = ""
    random_area1 = ""
    random_area2 = ""
    random_area3 = ""
    random_area4 = ""
    random_area5 = ""
BEGIN
  fl#SOURCE_NODE_DEFAULT = "-1"
  source_node = fl#SOURCE_NODE_DEFAULT
  PATCH_MATCH "%from_node%" WITH
    "north" "n" BEGIN source_node = 0 END
    "east" "e" BEGIN source_node = 3 END
    "south" "s" BEGIN source_node = 2 END
    "west" "w" BEGIN source_node = 1 END
    "" BEGIN source_node = fl#SOURCE_NODE_DEFAULT END
    DEFAULT
      PATCH_WARN "WARNING: ADD_WORLDMAP_LINKS got an illegal value for from_node (~%from_node%~); defaulting to all nodes"
  END
  READ_LONG 0x30 na
  READ_LONG 0x34 ao
  READ_LONG 0x38 lo
  links = 0
  FOR (i = 0; i < na; ++i) BEGIN
    READ_ASCII ao + 0xf0 * i name
    TO_UPPER name
    SET $fl#ADD_WORLDMAP_LINKS#AREAS("%name%") = i
  END
  TO_UPPER from_area
  TO_UPPER to_area
  PATCH_IF VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%from_area%") AND
           VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%")
  BEGIN
    FOR (i = 0; i < na; ++i) BEGIN
      lao = ao + 0xf0 * i
      READ_ASCII lao source_name
      PATCH_FOR_EACH node IN 0 3 2 1 BEGIN
        io = lao + 0x50 + 0x8 * node
        no = lao + 0x54 + 0x8 * node
        WRITE_LONG io links
        READ_LONG no number
        PATCH_IF "%source_name%" STRING_EQUAL_CASE "%from_area%" AND
                 (source_node = node OR source_node = fl#SOURCE_NODE_DEFAULT)
        BEGIN
          exists = 0
          FOR (j = 0; j < number; ++j) BEGIN
            llo = lo + 0xd8 * (links + j)
            READ_ASCII ao + 0xf0 * (LONG_AT llo) target_name
            PATCH_IF "%target_name%" STRING_EQUAL_CASE "%to_area%" BEGIN
              exists = llo
            END
          END
          PATCH_IF exists = 0 BEGIN
            llo = lo + 0xd8 * (links + number)
            INSERT_BYTES llo 0xd8
            LPF fl#ADD_WORLDMAP_LINKS#PATCH_LINK
              INT_VAR
                link_offset = llo
                target_index = $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%")
                distance_scale
                default_entry
                encounter_probability
              STR_VAR
                entry
                random_area1
                random_area2
                random_area3
                random_area4
                random_area5
            END
            ++number
          END ELSE BEGIN
            LPF fl#ADD_WORLDMAP_LINKS#PATCH_LINK
              INT_VAR
                link_offset = exists
                target_index = $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%")
                distance_scale
                default_entry
                encounter_probability
              STR_VAR
                entry
                random_area1
                random_area2
                random_area3
                random_area4
                random_area5
            END
          END
        END
        WRITE_LONG no number
        links += number
      END
    END
    WRITE_LONG 0x3c links
  END ELSE BEGIN
    PATCH_IF !VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%from_area%") BEGIN
      PATCH_WARN "WARNING: links from %from_area% were not added because %from_area% does not exist in the worldmap"
    END ELSE
    PATCH_IF !VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%") BEGIN
      PATCH_WARN "WARNING: links to %to_area% were not added because %to_area% does not exist in the worldmap"
    END
  END
END
