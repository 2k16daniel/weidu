<<<<<<<< .../fl#inlined/null.file
>>>>>>>>

DEFINE_PATCH_FUNCTION ADD_CRE_SCRIPT
  INT_VAR
    offset_start = SCRIPT_OVERRIDE
    offset_end = SCRIPT_DEFAULT
  STR_VAR
    script = ""
  RET
    success
BEGIN
  PATCH_IF "%script%" STR_CMP "" BEGIN
    READ_ASCII 0 sig (3)
    PATCH_IF "%sig%" STR_CMP "CRE" BEGIN
      PATCH_FAIL "ERROR: ADD_CRE_SCRIPT called on invalid creature file"
    END
    PATCH_FOR_EACH var IN offset_start offset_end BEGIN
      PATCH_IF EVAL "%%var%%" < 0 BEGIN
        PATCH_FAIL "ERROR: ADD_CRE_SCRIPT: invalid argument: %var%"
      END
    END
    PATCH_IF offset_end < offset_start BEGIN
      PATCH_FAIL "ERROR: ADD_CRE_SCRIPT: offset_end cannot be less than offset_start"
    END
    PATCH_IF offset_end > BUFFER_LENGTH BEGIN
      PATCH_FAIL "ERROR: ADD_CRE_SCRIPT: offset_end cannot be greater than the size of the file"
    END
    script_length = 0x8
    done = 0
    success = 0
    FOR (script_offset = offset_start; script_offset <= offset_end && !done; script_offset += script_length) BEGIN
      READ_ASCII script_offset escript
      PATCH_IF "%escript%" STRING_EQUAL "" OR "%escript%" STRING_EQUAL_CASE "none" BEGIN
        WRITE_ASCIIE script_offset "%script%"
        done = 1
        success = 1
      END
    END
    PATCH_IF !done BEGIN
      PATCH_PRINT "WARNING: ADD_CRE_SCRIPT was unable to assign script %script%"
    END
  END
END


DEFINE_ACTION_FUNCTION SUBSTRING
  INT_VAR
    start = 0
    length = 0
  STR_VAR
    string = ""
  RET
    substring
BEGIN
  ACTION_FOR_EACH var IN start length BEGIN
    ACTION_IF EVAL "%%var%%" < 0 BEGIN
      FAIL "ERROR: SUBSTRING: invalid argument: %var%"
    END
  END
  ACTION_IF length > STRING_LENGTH "%string%" BEGIN
    FAIL "ERROR: SUBSTRING: the substring cannot be longer than the string"
  END
  ACTION_IF start > STRING_LENGTH "%string%" BEGIN
    FAIL "ERROR: SUBSTRING: the substring cannot be taken at an offset greater than the string length"
  END
  ACTION_IF start + length > STRING_LENGTH "%string%" BEGIN
    FAIL "ERROR: SUBSTRING: attempt to take substring out of bounds"
  END
  OUTER_PATCH "%string%" BEGIN
    READ_ASCII start substring (length)
  END
END


DEFINE_PATCH_FUNCTION SUBSTRING
  INT_VAR
    start = 0
    length = 0
  STR_VAR
    string = ""
  RET
    substring
BEGIN
  INNER_ACTION BEGIN
    LAF SUBSTRING INT_VAR start length STR_VAR string RET substring END
  END
END

DEFINE_ACTION_FUNCTION HANDLE_AUDIO
  INT_VAR
    music = 0
  STR_VAR
    audio_path = EVAL "%MOD_FOLDER%/audio"
    oggdec_path = EVAL "%audio_path%"
    sox_path = EVAL "%audio_path%"
    output_path = "override"
BEGIN
  ACTION_IF !FILE_EXISTS_IN_GAME monkfist.2da BEGIN
    ACTION_MATCH "%WEIDU_OS%" WITH
      win32
      BEGIN
        ACTION_IF FILE_EXISTS "%oggdec_path%/oggdec.exe" BEGIN
          ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
            OUTER_SPRINT wavfile ~%output_path%/%BASH_FOR_RES%.wav~
            COPY ~.../fl#inlined/null.file~ ~%wavfile%~
            AT_NOW ~%oggdec_path%/oggdec.exe -o "%wavfile%" "%BASH_FOR_FILESPEC%"~
          END
        END ELSE BEGIN
          WARN ~WARNING: audio was not installed because oggdec.exe could not be found in %oggdec_path%~
        END
      END

      osx
      BEGIN
        ACTION_IF FILE_EXISTS ~%sox_path%/sox~ BEGIN
          AT_NOW ~chmod +x '%sox_path%/sox'~
          ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
            OUTER_SPRINT wavfile ~%output_path%/%BASH_FOR_RES%.wav~
            COPY ~.../fl#inlined/null.file~ ~%wavfile%~
            AT_NOW ~'%sox_path%/sox' '%BASH_FOR_FILESPEC%' '%wavfile%'~
          END
        END ELSE BEGIN
          WARN ~WARNING: audio was not installed because sox could not be found in %sox_path%~
        END
      END

      unix
      BEGIN
        OUTER_SET installed = 1
        ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
          OUTER_SPRINT wavfile ~%output_path%/%BASH_FOR_RES%.wav~
          COPY ~.../fl#inlined/null.file~ ~%wavfile%~
          AT_NOW ~oggdec -o '%wavfile%' '%BASH_FOR_FILESPEC%'~
          ACTION_IF !FILE_EXISTS ~%wavfile%~ OR
                    FILE_SIZE ~%wavfile%~ 0
          BEGIN
            OUTER_SET installed = 0
          END
        END
        ACTION_IF !installed BEGIN
          WARN "WARNING: audio was not installed because WAV files were not found. Are you sure you have oggdec installed?"
        END
      END
      DEFAULT
    END
  END ELSE BEGIN
    ACTION_IF !music BEGIN
      OUTER_SPRINT ext "wav"
    END ELSE BEGIN
      OUTER_SPRINT ext "acm"
    END
    ACTION_BASH_FOR ~%audio_path%~ ~.+\.ogg$~ BEGIN
      COPY_LARGE ~%BASH_FOR_FILESPEC%~ ~%output_path%/%BASH_FOR_RES%.%ext%~
    END
  END
END

DEFINE_ACTION_FUNCTION HANDLE_TILESETS
  STR_VAR
    tiz_path = EVAL "%MOD_FOLDER%/tiz"
    tisunpack_path = EVAL "%tiz_path%"
    output_path = "override"
BEGIN
  ACTION_MATCH "%WEIDU_OS%" WITH
    win32
    BEGIN
      OUTER_SPRINT tisunpack "tisunpack.exe"
      OUTER_SPRINT quote ~"~
    END

    osx unix
    BEGIN
      OUTER_SPRINT tisunpack "tisunpack"
      ACTION_IF FILE_EXISTS ~%tisunpack_path%/%WEIDU_OS%/%tisunpack%~ BEGIN
        AT_NOW ~chmod +x '%tisunpack_path%/%WEIDU_OS%/%tisunpack%'~
      END
      OUTER_SPRINT quote ~'~
    END
    DEFAULT
  END
  ACTION_IF FILE_EXISTS ~%tisunpack_path%/%WEIDU_OS%/%tisunpack%~ BEGIN
    ACTION_BASH_FOR ~%tiz_path%~ ~.+\.tiz$~ BEGIN
      OUTER_SPRINT tisfile ~%output_path%/%BASH_FOR_RES%.tis~
      COPY ~.../fl#inlined/null.file~ ~%tisfile%~
      AT_NOW ~%tisunpack_path%/%WEIDU_OS%/%tisunpack% -s -f -o %quote%%tisfile%%quote% %quote%%BASH_FOR_FILESPEC%%quote%~
    END
  END ELSE ACTION_IF "%WEIDU_OS%" STRING_EQUAL_CASE "unix" BEGIN // Support tisunpack being located on the system path
    OUTER_SET installed = 1
    ACTION_BASH_FOR ~%tiz_path%~ ~.+\.tiz$~ BEGIN
      OUTER_SPRINT tisfile ~%output_path%/%BASH_FOR_RES%.tis~
      COPY ~.../fl#inlined/null.file~ ~%tisfile%~
      AT_NOW ~tisunpack -s -f -o '%tisfile%' '%BASH_FOR_FILESPEC%'~
      ACTION_IF !FILE_EXISTS ~%tisfile%~ OR
                FILE_SIZE ~%tisfile%~ 0
      BEGIN
        OUTER_SET installed = 0
      END
    END
    ACTION_IF !installed BEGIN
      FAIL ~ERROR: tilesets were not installed because TIS files were not found. Are you sure you have tisunpack installed?~
    END
  END ELSE BEGIN
    FAIL ~ERROR: tilesets were not installed because %tisunpack% was not found in %tisunpack_path%/%WEIDU_OS%~
  END
END

DEFINE_ACTION_FUNCTION fl#HANDLE_CHARSETS#WHICH#INFER
  STR_VAR
    language = ~~
  RET
    charset
BEGIN
  ACTION_MATCH "%language%" WITH
    ".*schinese.*"
    BEGIN
      OUTER_SPRINT charset "CP936"
    END

    /* Doubts remain about whether CP950 is the correct charset for
     * Traditional Chinese, mainly due to the translation of the
     * BG2 Fixpack, which does not appear to be perfectly represented
     * by CP950.
     * Possible other alternatives include something involving the
     * Hong Kong Supplementary Character Set (HKSCS) or Windows'
     * non-standard CP950+CP951 hack (which appears to be unavailable
     * outside of Traditionally Chinese Windows).
     * Cf. Wikipedia on Big5.
     */
    ".*tchinese.*"
    BEGIN
      OUTER_SPRINT charset "CP950"
    END

    ".*czech.*"
    BEGIN
      OUTER_SPRINT charset "CP1250"
    END

    ".*english.*" ".*american.*"
    BEGIN
      OUTER_SPRINT charset "CP1252"
    END

    ".*french.*" ".*francais.*"
    BEGIN
      OUTER_SPRINT charset "CP1252"
    END

    ".*german.*" ".*deutsch.*"
    BEGIN
      OUTER_SPRINT charset "CP1252"
    END

    ".*italian.*" ".*italiano.*"
    BEGIN
      OUTER_SPRINT charset "CP1252"
    END

    ".*japanese.*"
    BEGIN
      OUTER_SPRINT charset "CP932"
    END

    ".*korean.*"
    BEGIN
      OUTER_SPRINT charset "CP949"
    END

    ".*polish.*" ".*polski.*"
    BEGIN
      OUTER_SPRINT charset "CP1250"
    END

    ".*russian.*"
    BEGIN
      OUTER_SPRINT charset "CP1251"
    END

    ".*spanish.*" ".*castilian.*" ".*espanol.*" ".*castellano.*"
    BEGIN
      OUTER_SPRINT charset "CP1252"
    END

    DEFAULT
      FAIL "ERROR: charset could not be inferred for language %language%"
  END
END

DEFINE_ACTION_FUNCTION fl#HANDLE_CHARSETS#WHICH
  INT_VAR
    infer_charsets = 0
  STR_VAR
    language = ~~
    charset_table = ~~
  RET
    charset
BEGIN
  ACTION_IF infer_charsets BEGIN
    LAF fl#HANDLE_CHARSETS#WHICH#INFER STR_VAR language RET charset END
  END ELSE BEGIN
    ACTION_TO_LOWER language
    ACTION_IF VARIABLE_IS_SET $EVAL "%charset_table%"("%language%") BEGIN
      OUTER_SPRINT charset $EVAL "%charset_table%"("%language%")
    END ELSE BEGIN
      FAIL "ERROR: no tabulated charset could be found for language %language%"
    END
  END
END

DEFINE_ACTION_FUNCTION fl#HANDLE_CHARSETS#CONVERT
  STR_VAR
    iconv = ~iconv~
    quote = ~"~
    path = ~~
    file = ~~
    from_charset = ~123fakecharset~
    to_charset = ~UTF-8~
BEGIN
  /*
   * iconv will happily be told to use an incorrect -f encoding and
   * produce invalid output, so may as well provide the -c option.
   */
  OUTER_SPRINT c_option "-c"
  OUTER_SPRINT infile ~%path%/%file%~
  OUTER_SPRINT outfile ~%path%/fl#utf8_%file%~
  ACTION_TRY
    COPY "%infile%" "%outfile%"
    /*
     * The -o option does not appear to be supported by all implementations
     */
    AT_NOW ~%iconv% %c_option% -f %from_charset% -t %to_charset% %quote%%infile%%quote% > %quote%%outfile%%quote%~
    COPY "%outfile%" "%infile%"
      REPLACE_TEXTUALLY ~-\*-[%TAB% ]*coding:[%TAB% ]*%from_charset%[%TAB% ]*-\*-~
                        ~-*- coding: %to_charset% -*-~
  WITH
    DEFAULT
      PRINT "ERROR: unable to convert %infile% from %from_charset% into %to_charset%"
      ACTION_RERAISE
  END
END

DEFINE_ACTION_FUNCTION fl#HANDLE_CHARSETS#RECURSE
  STR_VAR
    path = ""
    type = ""
    function = ""
BEGIN
  ACTION_BASH_FOR "%path%" ".+\.%type%$" BEGIN
    LAF "%function%"
      STR_VAR
        file = EVAL "%BASH_FOR_FILE%"
        path = EVAL "%BASH_FOR_DIRECTORY%"
    END
  END
  ACTION_CLEAR_ARRAY dir_array
  GET_DIRECTORY_ARRAY dir_array "%path%" ".+"
  ACTION_PHP_EACH EVAL dir_array AS _ => path BEGIN
    ACTION_IF "%path%" STRING_MATCHES_REGEXP ".*\.$" BEGIN
      LAF fl#HANDLE_CHARSETS#RECURSE STR_VAR path type function END
    END
  END
END

DEFINE_ACTION_FUNCTION fl#HANDLE_CHARSETS#RECURSE#TERMINAL
  STR_VAR
    file = ""
    path = ""
BEGIN
  OUTER_SET convert = 1
  /* This makes for a more consistent interface, albeit slightly
   * messier code. noconvert_array is very likely to be short.
   */
  ACTION_PHP_EACH "%noconvert_array%" AS _ => noconvert_file BEGIN
    ACTION_IF "%noconvert_file%.tra" STRING_EQUAL_CASE "%file%" BEGIN
      OUTER_SET convert = 0
    END
  END
  ACTION_IF convert BEGIN
    LAF fl#HANDLE_CHARSETS#CONVERT
      STR_VAR
        iconv // from the calling environment (curse the lack of closures)
        quote // from the calling environment
        path
        file
        from_charset // from the calling environment
    END
  END
END

DEFINE_ACTION_FUNCTION HANDLE_CHARSETS
  INT_VAR
    infer_charsets = 0
  STR_VAR
    tra_path = ~~
    default_language = ~english~
    language = EVAL ~%LANGUAGE%~
    iconv_path = EVAL ~%tra_path%/iconv~
    charset_table = ~~
    convert_array = ~~
    noconvert_array = ~~
    reload_array = ~~
BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME monkfist.2da BEGIN
    /*
     * Initial versions mistakenly called the variable infer_charset.
     * For reasons of backwards-compatibility, we use infer_charset
     * to initialise infer_charsets, if appropriate.
     */
    OUTER_SET infer_charsets = (IS_AN_INT infer_charset AND infer_charset) AND !infer_charsets ? 1 : infer_charsets
    ACTION_MATCH ~%WEIDU_OS%~ WITH
      win32
      BEGIN
        OUTER_SPRINT iconv ~%iconv_path%/iconv.exe~
        OUTER_SPRINT quote ~"~
      END

      osx unix
      BEGIN
        OUTER_SPRINT iconv ~iconv~
        OUTER_SPRINT quote ~'~
      END

      DEFAULT
    END
    ACTION_IF ("%WEIDU_OS%" STRING_EQUAL_CASE "win32" AND FILE_EXISTS "%iconv%") OR
              ("%WEIDU_OS%" STRING_EQUAL_CASE "osx" OR "%WEIDU_OS%" STRING_EQUAL_CASE "unix")
    BEGIN
      ACTION_FOR_EACH language IN "%default_language%" "%language%" BEGIN
        ACTION_IF !FILE_EXISTS ~%tra_path%/%language%/fl#utf8.mrk~ BEGIN
          LAF fl#HANDLE_CHARSETS#WHICH
            INT_VAR
              infer_charsets
            STR_VAR
              language
              charset_table
            RET
              from_charset = charset
          END
          ACTION_IF VARIABLE_IS_SET $EVAL "%convert_array%"(0) BEGIN
            ACTION_PHP_EACH "%convert_array%" AS _ => filename BEGIN
              LAF fl#HANDLE_CHARSETS#CONVERT
                STR_VAR
                  iconv
                  quote
                  path = EVAL ~%tra_path%/%language%~
                  file = EVAL ~%filename%.tra~
                  from_charset
              END
            END
          END ELSE BEGIN
            LAF fl#HANDLE_CHARSETS#RECURSE
              STR_VAR
                path = EVAL ~%tra_path%/%language%~
                type = ~tra~
                function = ~fl#HANDLE_CHARSETS#RECURSE#TERMINAL~
            END
          END
          ACTION_PHP_EACH "%reload_array%" AS _ => file BEGIN
            LOAD_TRA ~%tra_path%/%language%/%file%.tra~
          END
          COPY_EXISTING sw1h01.itm ~%tra_path%/%language%/fl#utf8.mrk~
        END
      END
    END ELSE BEGIN
      FAIL "ERROR: charsets were not converted because iconv could not be found in %iconv_path%"
    END
  END
END

DEFINE_PATCH_FUNCTION fl#WORLDMAP_LINKS#PATCH_LINK
  INT_VAR
    link_offset = 0
    target_index = 0
    distance_scale = 0
    default_entry = 1
    encounter_probability = 0
  STR_VAR
    entry = ""
    random_area1 = ""
    random_area2 = ""
    random_area3 = ""
    random_area4 = ""
    random_area5 = ""
BEGIN
  PATCH_IF link_offset > 0 BEGIN
    WRITE_LONG   link_offset target_index
    WRITE_ASCIIE link_offset + 0x4  "%entry%" #32
    WRITE_LONG   link_offset + 0x24 distance_scale
    WRITE_LONG   link_offset + 0x28 default_entry
    WRITE_ASCIIE link_offset + 0x2c "%random_area1%" #8
    WRITE_ASCIIE link_offset + 0x34 "%random_area2%" #8
    WRITE_ASCIIE link_offset + 0x3c "%random_area3%" #8
    WRITE_ASCIIE link_offset + 0x44 "%random_area4%" #8
    WRITE_ASCIIE link_offset + 0x4c "%random_area5%" #8
    WRITE_LONG   link_offset + 0x54 encounter_probability
  END
END

DEFINE_PATCH_FUNCTION fl#WORLDMAP_LINKS#GET_SOURCE_NODE
  INT_VAR
    default = "-1"
  STR_VAR
    from_node = ""
  RET
    source_node
BEGIN
  source_node = default
  PATCH_MATCH "%from_node%" WITH
    "north" "n" BEGIN source_node = 0 END
    "east" "e" BEGIN source_node = 3 END
    "south" "s" BEGIN source_node = 2 END
    "west" "w" BEGIN source_node = 1 END
    "" BEGIN source_node = default END
    DEFAULT
      PATCH_WARN "WARNING: ADD_WORLDMAP_LINKS got an illegal value for from_node (~%from_node%~); defaulting to all nodes"
  END
END

DEFINE_PATCH_FUNCTION DELETE_WORLDMAP_LINKS
  STR_VAR
    from_area = ""
    from_node = ""
    to_area = ""
BEGIN
  fl#SOURCE_NODE_DEFAULT = "-1"
  LPF fl#WORLDMAP_LINKS#GET_SOURCE_NODE
    INT_VAR
      default = fl#SOURCE_NODE_DEFAULT
    STR_VAR
      from_node
    RET
      source_node
  END
  READ_LONG 0x34 ao
  READ_LONG 0x38 lo
  links = 0
  FOR (i = 0; i < LONG_AT 0x30; ++i) BEGIN
    lao = ao + 0xf0 * i
    READ_ASCII lao source_name
    PATCH_FOR_EACH node IN 0 3 2 1 BEGIN
      io = lao + 0x50 + 0x8 * node
      no = lao + 0x54 + 0x8 * node
      WRITE_LONG io links
      READ_LONG no number
      PATCH_IF "%source_name%" STRING_EQUAL_CASE "%from_area%" AND
               (source_node = node OR source_node = fl#SOURCE_NODE_DEFAULT)
      BEGIN
        FOR (j = 0; j < number; ++j) BEGIN
          llo = lo + 0xd8 * (links + j)
          READ_ASCII ao + 0xf0 * (LONG_AT llo) target_name
          PATCH_IF "%target_name%" STRING_EQUAL_CASE "%to_area%" BEGIN
            DELETE_BYTES llo 0xd8
            --number
          END
        END
      END
      WRITE_LONG no number
      links += number
    END
  END
  WRITE_LONG 0x3c links
END

DEFINE_PATCH_FUNCTION ADD_WORLDMAP_LINKS
  INT_VAR
    distance_scale = 0
    default_entry = 1
    encounter_probability = 0
  STR_VAR
    from_area = ""
    from_node = ""
    to_area = ""
    entry = ""
    random_area1 = ""
    random_area2 = ""
    random_area3 = ""
    random_area4 = ""
    random_area5 = ""
BEGIN
  fl#SOURCE_NODE_DEFAULT = "-1"
  LPF fl#WORLDMAP_LINKS#GET_SOURCE_NODE
    INT_VAR
      default = fl#SOURCE_NODE_DEFAULT
    STR_VAR
      from_node
    RET
      source_node
  END
  READ_LONG 0x30 na
  READ_LONG 0x34 ao
  READ_LONG 0x38 lo
  links = 0
  FOR (i = 0; i < na; ++i) BEGIN
    READ_ASCII ao + 0xf0 * i name
    TO_UPPER name
    SET $fl#ADD_WORLDMAP_LINKS#AREAS("%name%") = i
  END
  TO_UPPER from_area
  TO_UPPER to_area
  PATCH_IF VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%from_area%") AND
           VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%")
  BEGIN
    FOR (i = 0; i < na; ++i) BEGIN
      lao = ao + 0xf0 * i
      READ_ASCII lao source_name
      PATCH_FOR_EACH node IN 0 3 2 1 BEGIN
        io = lao + 0x50 + 0x8 * node
        no = lao + 0x54 + 0x8 * node
        WRITE_LONG io links
        READ_LONG no number
        PATCH_IF "%source_name%" STRING_EQUAL_CASE "%from_area%" AND
                 (source_node = node OR source_node = fl#SOURCE_NODE_DEFAULT)
        BEGIN
          exists = 0
          FOR (j = 0; j < number; ++j) BEGIN
            llo = lo + 0xd8 * (links + j)
            READ_ASCII ao + 0xf0 * (LONG_AT llo) target_name
            PATCH_IF "%target_name%" STRING_EQUAL_CASE "%to_area%" BEGIN
              exists = llo
            END
          END
          PATCH_IF exists = 0 BEGIN
            llo = lo + 0xd8 * (links + number)
            INSERT_BYTES llo 0xd8
            LPF fl#WORLDMAP_LINKS#PATCH_LINK
              INT_VAR
                link_offset = llo
                target_index = $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%")
                distance_scale
                default_entry
                encounter_probability
              STR_VAR
                entry
                random_area1
                random_area2
                random_area3
                random_area4
                random_area5
            END
            ++number
          END ELSE BEGIN
            LPF fl#WORLDMAP_LINKS#PATCH_LINK
              INT_VAR
                link_offset = exists
                target_index = $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%")
                distance_scale
                default_entry
                encounter_probability
              STR_VAR
                entry
                random_area1
                random_area2
                random_area3
                random_area4
                random_area5
            END
          END
        END
        WRITE_LONG no number
        links += number
      END
    END
    WRITE_LONG 0x3c links
  END ELSE BEGIN
    PATCH_IF !VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%from_area%") BEGIN
      PATCH_WARN "WARNING: links from %from_area% were not added because %from_area% does not exist in the worldmap"
    END ELSE
    PATCH_IF !VARIABLE_IS_SET $fl#ADD_WORLDMAP_LINKS#AREAS("%to_area%") BEGIN
      PATCH_WARN "WARNING: links to %to_area% were not added because %to_area% does not exist in the worldmap"
    END
  END
END
